---
title: "Model"
execute:
  echo: false
---
```{r}
#| label: setup
#| message: false
library(tidyverse)
library(brms)
library(tidybayes)
library(gtsummary)
```

```{r}
#| label: data_load
#| message: false
#| warning: false

x <- read_csv("q1_2024_all.csv") |> 
  janitor::clean_names() |>
#grouped numbers into character categories based on range of volatility ranks and mcap ranks
   mutate(volatility_rank = 
            case_when(volatility_rank %in% c(1,4) ~ "low",
                      volatility_rank %in% c(5,7) ~ "mid" ,
                      volatility_rank %in% c(8,10) ~ "high"),
    mcap_rank = case_when(mcap_rank %in% c(1, 4) ~ "low",
                         mcap_rank %in% c(5, 7) ~ "mid",
                         mcap_rank %in% c(8, 10) ~ "high"),
  #log transformed data to make it fit a normal distribution
    log_hidden = log(hidden)) |>
  select(security, ticker, volatility_rank, hidden, date, log_hidden, mcap_rank) |>
#selected specific date, removed negative values, removed ETFs
  filter(hidden > 0, date == 20240207, security == "Stock") |> drop_na()
#removed NaNs
stock <- na.omit(x)

```
## Model Definition

$$\begin{aligned}y_{i} = \beta_1x_1 + \beta_2x_2+ \epsilon_{i}\\with\ y = log(hidden), x_1 = volatility\_rank, x_2 = mcap\_rank, \epsilon_{i} = error\end{aligned}$$
To interpret log_hidden, I exponentiated the results of the fitted model using (exp(x) -1). 

```{r}
#| label: model
#| cache: true

fit_sec8 <- brm(formula = log_hidden ~ volatility_rank + mcap_rank,
    data = stock,
    family = gaussian(),
    silent = 2,
    refresh = 0,
    seed = 9)
```
## Fitted Model
```{r}
#| warning: false
tbl_regression(fit_sec8)

fixef(fit_sec8)
```
## Plot
```{r}
#| label: plot

fit_sec8 |> 
  add_epred_draws(newdata = tibble(volatility_rank = c("low", "mid", "high"), mcap_rank = c("low", "mid", "high"))) |> 
  ggplot(aes(x = .epred, fill = volatility_rank)) + 
    geom_histogram(aes(y = after_stat(count/sum(count))),
                   bins = 200, alpha = 0.7) + 
    scale_y_continuous(labels = scales::percent_format()) +
    theme_classic() +
  labs(title = "Posterior for Hidden Orders per Stock",
       subtitle = "High volatility stocks experience the most hidden orders", 
       x = "Hidden Orders (Log)",
       y = "Probability",
       fill = "Volatility")

fit_sec8 |> 
  add_epred_draws(newdata = tibble(volatility_rank = c("low", "mid", "high"), mcap_rank = c("low", "mid", "high"))) |> 
  ggplot(aes(x = .epred, fill = mcap_rank)) + 
    geom_histogram(aes(y = after_stat(count/sum(count))),
                   bins = 200, alpha = 0.7) + 
    scale_y_continuous(labels = scales::percent_format()) +
    theme_classic() +
  labs(title = "Posterior for Hidden Orders per Stock",
       subtitle = "Stocks with large market caps experience  the most hidden orders", 
       x = "Hidden Orders (Log)",
       y = "Probability",
       fill = "Market Capitalization")
```
## Posterior Predictive Check
```{r}
#|label: check
#| message: false

pp_check(fit_sec7, type = "hist")
```
